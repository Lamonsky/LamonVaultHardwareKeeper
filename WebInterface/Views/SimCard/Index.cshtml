@model IEnumerable<Data.Computers.SelectVMs.SimCardsVM>

@{
    ViewData["Title"] = "Index";
}

<h1>@await Component.InvokeAsync("PageContentViewComponent", new { type = "SimCardCategoryName" })</h1>


<div class="row">
    @if (Model != null && Model.Any())
    {
        foreach (var item in Model)
        {
                                    <div class="col-md mt-2">
                                        <div class="card">
                                            <div class="card-body">   
                                                <p class="card-text">
                                                    <strong>@await Component.InvokeAsync("PageContentViewComponent", new { type = "SimCardComponentName" })</strong> <br />
                            @item.Component<br />
                                                    <strong>@await Component.InvokeAsync("PageContentViewComponent", new { type = "SimCardPinCodeName" })</strong> <br />
                            @item.PinCode<br />
                                                    <strong>@await Component.InvokeAsync("PageContentViewComponent", new { type = "SimCardPukCodeName" })</strong> <br />
                            @item.PukCode<br />          
                                                    <strong>@await Component.InvokeAsync("PageContentViewComponent", new { type = "SimCardStatusName" })</strong> <br />
                            @item.Status<br />                                                    
                                                    <strong>@await Component.InvokeAsync("PageContentViewComponent", new { type = "SimCardSerialNumberName" })</strong> <br />
                            @item.SerialNumber<br />
                                                    <strong>@await Component.InvokeAsync("PageContentViewComponent", new { type = "SimCardInventoryNumberName" })</strong> <br />
                            @item.InventoryNumber<br />
                                                </p>
                                                        <a class="navbar-brand" asp-area="" asp-controller="SimCard" asp-action="PrintToPDF" asp-route-id="@item.Id">
                            @await Component.InvokeAsync("PageContentViewComponent", new { type = "PrintToPDFButtonHeader" })
                                                            </a>
                                            </div>
                                        </div>
                                    </div>
        }
    }
    else
    {
                    <div class="col-md mt-2-4">
                        <div class="card mb-4">
                            <div class="card-body">
                                <h5 class="card-title mb-2">Brak obiektów do wyświetlenia</h5>
                            </div>
                        </div>
                    </div>
    }
</div>
