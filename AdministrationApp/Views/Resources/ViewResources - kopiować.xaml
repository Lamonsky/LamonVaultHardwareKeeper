<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:vma="clr-namespace:AdministrationApp.ViewModels.AllViewModel"
                    xmlns:vwa="clr-namespace:AdministrationApp.Views.AllViews"
                    xmlns:vmn="clr-namespace:AdministrationApp.ViewModels.NewViewModel"
                    xmlns:vwn="clr-namespace:AdministrationApp.Views.NewViews"
                    xmlns:win="clr-namespace:AdministrationApp.Views.AllWindows"
                    >

    <DataTemplate DataType="{x:Type vma:AllComputerViewModel}">
        <vwa:AllComputerView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmn:NewComputerViewModel}">
        <vwn:NewComputerView/>
    </DataTemplate>



    <Style TargetType="TextBox">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
    </Style>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatAccentButton}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
    </Style>




    <!--DONT CHANGE DOWNSIDE-->

    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>

                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
      This template ensures that content of a HeaderedContentControl 
      fills the available vertical space. 
      -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
            DockPanel.Dock="Top"
            ContentSource="Header" 
            ContentTemplate="{TemplateBinding HeaderTemplate}" 
            />
                        <ContentPresenter 
            ContentSource="Content" 
            ContentTemplate="{TemplateBinding ContentTemplate}" 
            />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
This template explains how to render the list of commands on the left
side in the main window (the 'Control Panel' area).
-->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding DisplayName}" Command="{Binding Path=Command}" Margin="6" Padding="5" BorderThickness="0"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
This template explains how to render 
a tab item with a close button.
-->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
      Command="{Binding Path=CloseCommand}"
      Content="X"
      Cursor="Hand"
      DockPanel.Dock="Right"
      Focusable="False"
      FontFamily="Courier" 
      FontSize="9"
      FontWeight="Bold"  
      Margin="0,1,0,0"
      Padding="0"
      VerticalContentAlignment="Bottom"
      Width="16" Height="16" 
      />
            <ContentPresenter 
      Content="{Binding Path=DisplayName}" 
      VerticalAlignment="Center" 
      />
        </DockPanel>
    </DataTemplate>

    <!--
This template explains how to render the 'Workspace' content area in the main window.
-->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
    IsSynchronizedWithCurrentItem="True" 
    ItemsSource="{Binding}" 
    ItemTemplate="{StaticResource ClosableTabItemTemplate}"
    Margin="4"
    />
    </DataTemplate>


</ResourceDictionary>